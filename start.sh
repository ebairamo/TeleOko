#!/bin/bash

# TeleOko v2.0 - –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
# ================================

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö

echo "üöÄ –ó–∞–ø—É—Å–∫ TeleOko v2.0 - –°–∏—Å—Ç–µ–º–∞ –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è"
echo "=================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Go
check_go() {
    if ! command -v go &> /dev/null; then
        print_error "Go –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Go 1.22+ —Å https://golang.org/"
        exit 1
    fi
    
    GO_VERSION=$(go version | awk '{print $3}' | sed 's/go//')
    print_status "Go –≤–µ—Ä—Å–∏—è: $GO_VERSION"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –ø–æ—Ä—Ç–æ–≤
check_ports() {
    local ports=(8082 1984)
    
    for port in "${ports[@]}"; do
        if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null 2>&1; then
            print_warning "–ü–æ—Ä—Ç $port —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
            
            if [ "$port" = "8082" ]; then
                print_error "–ü–æ—Ä—Ç 8082 (–≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å) –∑–∞–Ω—è—Ç! –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥—Ä—É–≥–∏–µ —Å–ª—É–∂–±—ã –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–æ—Ä—Ç –≤ config.json"
                exit 1
            fi
        else
            print_status "–ü–æ—Ä—Ç $port —Å–≤–æ–±–æ–¥–µ–Ω"
        fi
    done
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
create_default_config() {
    if [ ! -f "config.json" ]; then
        print_info "–°–æ–∑–¥–∞–Ω–∏–µ config.json —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é..."
        
        cat > config.json << 'EOF'
{
    "server": {
        "port": 8082
    },
    "hikvision": {
        "ip": "192.168.8.5",
        "username": "admin",
        "password": "oborotni2447",
        "port": 554
    },
    "go2rtc": {
        "port": 1984,
        "enabled": true
    },
    "auth": {
        "enabled": false,
        "username": "admin",
        "password": "password"
    },
    "channels": [
        {
            "id": "1",
            "name": "–û–±—â–∏–π –ø–ª–∞–Ω",
            "url": "rtsp://admin:oborotni2447@192.168.8.5:554/Streaming/Channels/1"
        },
        {
            "id": "201",
            "name": "–ö–∞–º–µ—Ä–∞ 1 (HD)",
            "url": "rtsp://admin:oborotni2447@192.168.8.5:554/Streaming/Channels/201"
        },
        {
            "id": "202",
            "name": "–ö–∞–º–µ—Ä–∞ 1 (SD)",
            "url": "rtsp://admin:oborotni2447@192.168.8.5:554/Streaming/Channels/202"
        }
    ]
}
EOF
        print_status "–§–∞–π–ª config.json —Å–æ–∑–¥–∞–Ω"
        print_warning "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config.json –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞—à–∏—Ö –∫–∞–º–µ—Ä!"
    else
        print_status "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞: config.json"
    fi
}

# –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
build_app() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–±–æ—Ä–∫–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –±–∏–Ω–∞—Ä–Ω–∏–∫ –∏ –∞–∫—Ç—É–∞–ª–µ–Ω –ª–∏ –æ–Ω
    if [ -f "teleoko" ]; then
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤
        NEWEST_SOURCE=$(find . -name "*.go" -newer "teleoko" 2>/dev/null | head -1)
        if [ -z "$NEWEST_SOURCE" ]; then
            print_status "–ë–∏–Ω–∞—Ä–Ω–∏–∫ –∞–∫—Ç—É–∞–ª–µ–Ω, —Å–±–æ—Ä–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è"
            return 0
        fi
    fi
    
    print_info "–°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    print_info "–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    go mod download
    
    # –°–æ–±–∏—Ä–∞–µ–º
    print_info "–ö–æ–º–ø–∏–ª—è—Ü–∏—è..."
    if go build -ldflags="-s -w" -o teleoko ./cmd/server; then
        print_status "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!"
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    chmod +x teleoko
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–∞–º–µ—Ä–µ
test_camera_connection() {
    print_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–∞–º–µ—Ä–µ..."
    
    # –ß–∏—Ç–∞–µ–º IP –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if command -v jq &> /dev/null; then
        CAMERA_IP=$(jq -r '.hikvision.ip' config.json 2>/dev/null || echo "192.168.8.5")
    else
        CAMERA_IP="192.168.8.5"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    fi
    
    if ping -c 1 -W 3 "$CAMERA_IP" &> /dev/null; then
        print_status "–ö–∞–º–µ—Ä–∞ $CAMERA_IP –¥–æ—Å—Ç—É–ø–Ω–∞"
    else
        print_warning "–ö–∞–º–µ—Ä–∞ $CAMERA_IP –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        print_info "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:"
        print_info "  ‚Ä¢ –ö–∞–º–µ—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫ —Å–µ—Ç–∏"
        print_info "  ‚Ä¢ IP-–∞–¥—Ä–µ—Å –≤ config.json –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π"
        print_info "  ‚Ä¢ –ù–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ñ–∞–π—Ä–≤–æ–ª–æ–º"
    fi
}

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—É—Å–∫–µ
show_startup_info() {
    local LOCAL_IP=$(hostname -I | awk '{print $1}' 2>/dev/null || echo "localhost")
    
    echo ""
    echo "üéâ TeleOko v2.0 –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!"
    echo "================================"
    echo ""
    echo "üì± –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
    echo "   ‚Ä¢ –õ–æ–∫–∞–ª—å–Ω–æ:  http://localhost:8082"
    echo "   ‚Ä¢ –ü–æ —Å–µ—Ç–∏:   http://$LOCAL_IP:8082"
    echo ""
    echo "üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
    echo "   ‚Ä¢ –§–∞–π–ª:      config.json"
    echo "   ‚Ä¢ go2rtc:    http://localhost:1984"
    echo ""
    echo "üìñ –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: Ctrl+C"
    echo "   ‚Ä¢ –õ–æ–≥–∏:       tail -f teleoko.log"
    echo "   ‚Ä¢ –°—Ç–∞—Ç—É—Å:     curl http://localhost:8082/api/info"
    echo ""
    print_info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞..."
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo ""
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
    check_go
    check_ports
    
    echo ""
    print_info "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    create_default_config
    
    echo ""
    print_info "–°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    build_app
    
    echo ""
    test_camera_connection
    
    echo ""
    show_startup_info
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    if [ -t 1 ]; then
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        ./teleoko 2>&1 | tee teleoko.log
    else
        # –ù–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, systemd)
        ./teleoko >> teleoko.log 2>&1
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap 'echo -e "\nüëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ TeleOko..."; exit 0' INT TERM

# –ó–∞–ø—É—Å–∫
main "$@"